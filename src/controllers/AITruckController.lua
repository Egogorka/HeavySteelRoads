---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Meevere.
--- DateTime: 09.07.2023 13:34
---

local Vector2 = require("utility/vector")[1]
local Stack = require("utility/stack")
local UserData = require("src/physics/UserData")

local CategoryManager = require("src/physics/CategoryManager")
local StateMachine = require("src/controllers/StateMachine")

local DetectorBox = require("src/controllers/DetectorBox")

local AITruck = TINY.processingSystem(StateMachine:extend("AITruck"))
AITruck.filter = TINY.requireAll("truck", "ai")

function AITruck:init()
    self.target = nil
end

function AITruck:onAdd(entity)
    AITruck.super.onAdd(self, entity)

    fill_table(entity.ai, {
        target = self.target,
        target_pos = nil,
    })

    DetectorBox.init(entity, {50/2, 50/2}, {400, 400}, "avoid_box")
end

-----------------------------------------
--- Idle state
-----------------------------------------

function AITruck:idle(entity, dt)
    local ai = entity.ai

    -- Handle state

    entity.truck.messages:push({ "move", Vector2({ -0.4, 0 }) })

    -- State out branches

    if ai.in_avoid_box then
        ai.target_pos = Vector2(ai.target.body:getPosition())
        ai.states:push("action")
        return
    end

    ai.states:push("idle") -- refill idle state
end

-----------------------------------------
--- Action state (shooting, going around the player to go left)
-----------------------------------------

function AITruck:action(entity, dt)
    local ai = entity.ai
    local truck = entity.truck

    local d = ai.target_pos - { entity.body:getPosition() }

    if math.abs(d:y()) < 40 then
        local dir = 0.6
        if d:y() < 0 then dir = -dir end
        truck.messages:push({ "move", { 0, -dir } })
    else
        truck.messages:push({ "move", { -0.6, 0 } })
    end

    if ai.in_avoid_box then
        ai.states:push("action")
    end
end

-----------------------------------------
--- Contact handlers
-----------------------------------------

function AITruck:contact(entity, dt, data)
    DetectorBox.onContact(entity, data, entity.ai.target, "avoid_box")
end

function AITruck:endContact(entity, dt, data)
    DetectorBox.onEndContact(entity, data, entity.ai.target, "avoid_box")
end

return AITruck

