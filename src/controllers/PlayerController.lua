---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Meevere.
--- DateTime: 04.12.2022 0:44
---

local Vector2 = require("utility/vector")[1]

local dump = require("utility/dump")


local PlayerController = TINY.processingSystem()
PlayerController.filter = TINY.requireAll("tank", "player")

function PlayerController.onAddToWorld(system, world)
    system.keys = {
        up = false,
        down = false,
        left = false,
        right = false,
    }
    system.keys_changed = false
end

local key_table = {
    up = Vector2({0, -1}),
    down = Vector2({0, 1}),
    left = Vector2({-1, 0}),
    right = Vector2({1, 0})
}

function PlayerController:keypressed(key, scancode, is_repeat)
    if is_repeat then
        return
    end

    local direction = key_table[key];
    if direction == nil then
        return
    end

    self.keys[key] = true
    self.keys_changed = true
end


function PlayerController:keyreleased(key, scancode)
    local direction = key_table[key];
    if direction == nil then
        return
    end

    self.keys[key] = false
    self.keys_changed = true
end


function PlayerController:_process_keyboard(entity, dt)

    if not self.keys_changed then
        return
    end
    self.keys_changed = false

    local velocity = Vector2({0.3, 0})
    for key in pairs(self.keys) do
        if self.keys[key] then
            velocity = velocity + 0.7 * key_table[key]
        end
    end

    if velocity == Vector2(0,0) then
        entity.tank.messages:push({"stop"});
    else
        entity.tank.messages:push({"move", velocity});
    end
end


local function process_depth(entity, dt)
    local depth = entity.depth.z
    if love.keyboard.isDown("q") then
        depth = depth / 0.95
    end
    if love.keyboard.isDown("e") then
        depth = depth * 0.95
    end
    entity.depth.z = depth
end


local function process_mouse(entity, dt)
    local mouse_pos = Vector2(camera:getMousePosition())
    entity.tank.messages:push({"aim", mouse_pos})

    local mouse_pressed = love.mouse.isDown(1)
    if mouse_pressed then
        entity.tank.messages:push({"shoot"})
    end
end


function PlayerController:process(entity, dt)
    process_depth(entity, dt)
    process_mouse(entity, dt)
    self:_process_keyboard(entity, dt)
end


return PlayerController