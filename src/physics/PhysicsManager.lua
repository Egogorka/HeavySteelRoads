---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Meevere.
--- DateTime: 02.04.2023 18:11
---

local PhysicsManager = {}

----------------------------------------
--#region Helper functions
----------------------------------------

local function getArrayAsBits(array)
    local output = 0
    for _, number in pairs(array) do
        -- output = output | (1 << number)
        output = bit.bor(output, bit.lshift(1, number - 1))
    end
    return output
end

----------------------------------------
--#endregion
----------------------------------------

---
---@param a_fixture love.Fixture
---@param b_fixture love.Fixture
---@param coll love.Contact
---@param text string
local function contact(a_fixture, b_fixture, coll, text)
    --if a.action then
    --    a.action(a, b, coll)
    --end
    local a = a_fixture:getUserData()
    local b = b_fixture:getUserData()

    if a.caller then
        if a.entity[a.caller].messages then
            a.entity[a.caller].messages:push({ text, { a, b } })
        end
    else
        if a.entity.behavior then
            a.entity[a.entity.behavior].messages:push({ text, { a, b } })
        end
    end
end

local function beginContact(a, b, coll)
    contact(a, b, coll, "contact")
    contact(b, a, coll, "contact")
end

local function endContact(a, b, coll)
    contact(a, b, coll, "endContact")
    contact(b, a, coll, "endContact")
end

local function preSolve(a_fixture, b_fixture, coll)
    -- Collision controlling
    local a = a_fixture:getUserData()
    local b = b_fixture:getUserData()

    local a_category = getArrayAsBits({ a_fixture:getCategory() })
    local b_category = getArrayAsBits({ b_fixture:getCategory() })

    local b_sensor = 0x0000
    local a_sensor = 0x0000

    if b.sensor_mask ~= nil and b.sensor_mask.n ~= nil then
        b_sensor = b.sensor_mask.n
    end
    if a.sensor_mask ~= nil and a.sensor_mask.n ~= nil then
        a_sensor = a.sensor_mask.n
    end

    -- print("And results: ", bit.band(a_category, b_sensor), bit.band(b_category, a_sensor))
    if bit.band(a_category, b_sensor) ~= 0 and bit.band(b_category, a_sensor) ~= 0 then
        coll:setEnabled(false)
        -- print("Collision!")
    end
end

function PhysicsManager.setCallbacks(p_world)
    p_world:setCallbacks(beginContact, endContact, preSolve)
end

return PhysicsManager
