---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Meevere.
--- DateTime: 04.01.2023 21:44
---

--- player NOT collides with player_bullets and player

local SensorMask = require("src/physics/SensorMask")

local CATEGORIES = {
    player = 1,
    player_wall = 2,
    enemy = 3,
    enemy_wall = 4,
    neutral = 5,
    neutral_wall = 6,

    bulletproof = 7
}

-- local TYPES = {"object", "bullet", "bwall"}

local CategoryManager = {};
CategoryManager.categories = CATEGORIES


---@param fixture love.Fixture
---@param type string
---@param team string
function CategoryManager.set(fixture, type, team)
    if type == "object" then
        CategoryManager.setObject(fixture, team)
    end
    if type == "bullet" then
        CategoryManager.setBullet(fixture, team)
    end
    if type == "bwall" then
        CategoryManager.setBreakableWall(fixture, team)
    end
    if type == "wall" then
        CategoryManager.setWall(fixture, team)
    end
end

---@param team string
---@param level number
function CategoryManager.checkTeam(team, level)
    if CATEGORIES[team] == nil then
        error("Wrong type of category", level or 2)
    end
    if CATEGORIES[team] % 2 ~= 1 then
        error("Wrong type of category for objects", level or 2)
    end
end

---@param team string
---@param level number
function CategoryManager.checkWallTeam(team, level)
    if CATEGORIES[team] == nil then
        error("Wrong type of category", level or 2)
    end
    if CATEGORIES[team] % 2 ~= 0 then
        error("Wrong type of category for walls", level or 2)
    end
end


--- Sets proper categories and masks for fixture of certain team
---@param fixture any but actually love.Fixture 
---@param team string
function CategoryManager.setObject(fixture, team)
    CategoryManager.checkTeam(team, 3)
    fixture:setCategory(CATEGORIES[team])
    fixture:setMask(CATEGORIES[team])
    SensorMask.fixtureSetMask(fixture, CATEGORIES["player"], CATEGORIES["enemy"], CATEGORIES["neutral"])
end

---
---@param fixture any
---@param team string
function CategoryManager.setBullet(fixture, team)
    CategoryManager.checkTeam(team, 3)
    fixture:setCategory(CATEGORIES[team])
    fixture:setMask(CATEGORIES[team])
end


--- Sets proper categories and masks for fixture of breakable wall of certain team
---@param fixture any but actually love.Fixture
---@param team string
function CategoryManager.setBreakableWall(fixture, team)
    CategoryManager.checkTeam(team, 3)
    fixture:setCategory(CATEGORIES[team])
    fixture:setMask(CATEGORIES[team])
    SensorMask.fixtureSetMask(fixture, CATEGORIES[team])
end


---
---@param fixture any
---@param team string
function CategoryManager.setWall(fixture, team)
    CategoryManager.checkTeam(team, 3)
    fixture:setCategory(CATEGORIES[team]+1)
    fixture:setMask(CATEGORIES[team]+1)
    SensorMask.fixtureSetMask(fixture, CATEGORIES[team])
end

-- function CategoryManager.setBullet(fixture, type)
--     if
--         type ~= CATEGORIES.player_bullets and
--         type ~= CATEGORIES.enemy_bullets and
--         type ~= CATEGORIES.neutral_bullets
--         then
--         error("Wrong type of category")
--         return
--     end
--     fixture:setCategory(type)
--     fixture:setMask(type, type - 1, CATEGORIES.bulletproof)
-- end

-- function CategoryManager.setObject(fixture, type)
--     if
--         type ~= CATEGORIES.player and
--         type ~= CATEGORIES.enemy and
--         type ~= CATEGORIES.neutral
--     then
--         error("Wrong type of category. Got: ", type)
--         return
--     end
--     fixture:setCategory(type)
--     fixture:setMask(type, type + 1)
-- end

-- function CategoryManager.setBulletproof(fixture)
--     fixture:setCategory(CATEGORIES.bulletproof)
--     fixture:setMask(CATEGORIES.player_bullets, CATEGORIES.enemy_bullets, CATEGORIES.neutral_bullets)
-- end

return CategoryManager