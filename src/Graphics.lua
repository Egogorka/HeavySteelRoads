---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Meevere.
--- DateTime: 23.10.2022 14:59
---

local anim8 = require("libs/anim8")
local class = require("libs/30log")

local Graphics = class("Graphics", {
    animations = nil,
    current_animation = nil
})

local Depth = class("Depth", {
    z = 1,
    scalable = true,
})

function Depth:init(z, scalable)
    self.z = z

    if( scalable ~= nil ) then
        self.scalable = scalable
    end
end

--- To make proper behavioral animations we need to define
--- several behaviors and give then as an argument somehow
---
--- For example, we have a player, it has several animations, like idle, run and jump
--- We need to be able to do something like this:
---
---     graphics.set("running");
---
--- and something like
---
---     graphics.set("jump", 1);
---


---
---entity_graphics = {
---    animations = {
---        idle = anim8.newAnimation(grid(1,1), 1),
---        move = anim8.newAnimation(grid(1,'1-4'), 0.2)
---    },
---    current = "idle"
---}
---
function Graphics:init(o)
    if( o["type"] ~= nil and o:type() == "Image") then
        local grid = anim8.newGrid(o:getWidth(), o:getHeight(), o:getWidth(), o:getHeight())
        self.animations = {
                idle = {anim8.newAnimation(grid(1,1), 1), o}
            }
        self.current_animation = "idle"
    else
        self.current_animation = o.current_animation
        self.animations = o.animations
    end
end

function Graphics:set(type)
    if( self.animations[type] == nil or self.current_animation == type) then
        return
    end
    self:current():gotoFrame(1) -- reset the previous animation
    self.current_animation = type
end

function Graphics:current()
    local temp = self.animations[self.current_animation]
    return temp[1], temp[2]
end

return {Graphics, Depth}