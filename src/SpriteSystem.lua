---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Meevere.
--- DateTime: 16.10.2022 16:43
---

local tiny = require("libs/tiny")
local Vector2 = require("utility/vector")[1]

local SpriteSystem = tiny.processingSystem()
SpriteSystem.filter = tiny.requireAll("sprite", "body")

SpriteSystem.focus_z = 1
SpriteSystem.focus_pos = Vector2(0,0)
SpriteSystem.focus_entity = nil

function SpriteSystem:preWrap(dt)
    if (self.focus_entity ~= nil) and (self.focus_entity.body ~= nil) then
        self.focus_pos = Vector2(self.focus_entity.body:getPosition())
    end
end

function SpriteSystem:process(entity, dt)
    local animation, image = entity.sprite:current()
    local depth = self.focus_z
    if (entity.depth ~= nil ) then
        depth = entity.depth.z
    end
    local position = Vector2(entity.body:getPosition())

    local scale  = self.focus_z / depth
    local pos = self.focus_pos - scale * (self.focus_pos - position)
    if( entity.depth ~= nil and entity.depth.scalable == false ) then
        scale = 1
    end

    animation:update(dt)

    if (entity.depth ~= nil and entity.depth.camera_affected == false ) then
        camera:detach()
        pos = position;
        animation:draw(image, pos[1], pos[2], 0, scale, scale)
        camera:attach()
    else
        animation:draw(image, pos[1], pos[2], 0, scale, scale)
    end
end

return SpriteSystem